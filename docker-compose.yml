version: '3'
services:

  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    container_name: mosa-python
    command: pipenv run uvicorn main:app --host 0.0.0.0 --reload
    volumes:
      - ./python:/app
    ports:
      - '50000:8000'
    tty: true

  go:
    build:
      context: ./go
      dockerfile: Dockerfile
    container_name: mosa-go
    ports:
      - '50001:8080'
    volumes:
      - ./go:/app

  rust:
    build:
      context: ./rust
      dockerfile: Dockerfile
    container_name: mosa-rust
    command: cargo run
    volumes:
      - ./rust:/app
    ports:
      - "50002:8080"

  ts:
    build:
      context: ./typescript
    container_name: mosa-ts
    volumes:
      - ./typescript:/opt/typescript
      - ./typescript/node_modules:/opt/typescript/node_modules
    ports:
      - "50003:8000"

  ruby:
    build:
      context: ./ruby
      dockerfile: Dockerfile
    container_name: mosa-ruby
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rails s -p 8080 -b '0.0.0.0'"
    ports:
      - 50004:8080
    volumes:
      - ./ruby:/app
    depends_on:
      - db
    env_file: .env

  cpp:
    build:
      context: ./cpp
      dockerfile: Dockerfile
    container_name: mosa-cpp
    volumes:
      - ./cpp:/app
    command: bash -c "cd /app/myapp/build && ./myapp"
    ports:
      - 50005:8080

  cs:
    build:
      context: ./cs
    container_name: mosa-cs
    volumes:
      - ./cs:/opt/cs
    ports:
      - 50006:8080

  r:
    build:
      context: ./R
      dockerfile: Dockerfile
    container_name: mosa-r
    volumes:
      - './R/api.R:/plumber.R'
    ports:
      - 50007:8000

  java:
    build:
      context: ./java
    container_name: mosa-java
    ports:
      - 50008:8080
    tty: true
    volumes:
      - ./java:/opt/java


  dart:
    build:
      context: ./dart
    container_name: mosa-dart
    ports:
      - 50009:8080
    volumes:
      - ./dart:/opt/dart

  elixir:
    build:
        context: ./elixir
        dockerfile: Dockerfile
    container_name: mosa-elixir
    ports:
      - '50010:8080'
    command: bash -c "mix deps.get && mix ecto.setup && mix phx.server"
    tty: true
    environment:
      - MIX_ENV=dev
      - PORT=8080
    volumes:
      - ./elixir:/app
    depends_on:
      - db
    env_file: .env

  kotlin:
    build:
      context: ./kotlin
    container_name: mosa-kotlin
    ports:
      - 50011:8080
    volumes:
      - ./kotlin:/opt/kotlin

  php:
    build:
        context: ./php
        dockerfile: Dockerfile
    container_name: mosa-php
    ports:
      - '50012:80'
    volumes:
      - ./php:/app

  scala:
    build:
      context: ./scala
    container_name: mosa-scala
    ports:
      - 50013:8080
    volumes:
      - ./scala:/opt/scala

  swift:
    build:
      context: ./swift
    container_name: mosa-swift
    ports:
      - 50014:8080
    volumes:
      - ./swift:/opt/swift

  db:
    container_name: mosa-db
    image: postgres:14
    volumes:
      - dbdata:/var/lib/postgresql/data/
      - ./db/init:/docker-entrypoint-initdb.d
    env_file:
      - .env
    ports:
      - "5432:5432"

  adminer:
    container_name: mosa-adminer
    image: adminer:4.7.5
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  dbdata: null
  node_modules:
